(()=>{"use strict";Error;const E={TEXT:"TEXT",STRING:"STRING",NUMBER:"NUMBER",BOOLEAN:"BOOLEAN",REGEX:"REGEX",ENUM:"ENUM",DATE:"DATE",TIMESTAMP:"TIMESTAMP",EMAIL:"EMAIL",URL:"URL",HEXADECIMAL:"HEXADECIMAL",BASE64:"BASE64",EMPTY:"EMPTY",INTEGER:"INTEGER",NATURAL:"NATURAL",getDefault:function(){return E.STRING},isValidType:function(E){return n.has(E)},isMultiline:function(E){return t.has(E)},isValuesType:function(E){return T.has(E)},isValidNamespace:function(E){try{return!!E.endsWith(".stxt")&&(new URL("https://"+E),!0)}catch(E){return!1}},isValidCount:function(E){return A.has(E)||(t=E,M.test(t));var t}},t=new Set([E.TEXT,E.BASE64,E.HEXADECIMAL]),e=new Set([E.STRING,E.NUMBER,E.BOOLEAN,E.REGEX,E.ENUM,E.DATE,E.TIMESTAMP,E.EMAIL,E.URL,E.EMPTY,E.INTEGER,E.NATURAL]),n=new Set([...e,...t]),T=new Set([E.ENUM,E.REGEX]),A=new Set(["*","+","?"]),M=/^\d+(\+|-)?$/;new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[+-]\\d{2}:\\d{2})?$"),new RegExp("^(?=.{1,256})(?=.{1,64}@.{1,255}$)(?=.{1,64}@.{1,63}\\..{1,63}$)[A-Za-z0-9!#$%&'*+/=?^_`{|}~.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$")})();